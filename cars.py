#!/usr/bin/env python

import json
import locale
import sys
import operator
import collections


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  max_sales = 0
  max_sale = {"sale" : 0}
  popular_car_year = {}
  car_year_sales = collections.defaultdict(int)

  #print(max_sales)
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      #print(item["revenue"])
      max_revenue = item

    # TODO: also handle max sales
    item_sales = item["total_sales"]
    if item_sales > max_sales:
        max_sales = item_sales
        #print(max_sale)
        max_sale = item
        #print(max_sale)
    car_year_sales[item["car"]["car_year"]] += item["total_sales"]
    # TODO: also handle most popular car_year
    #if item["car"]["car_year"] in popular_car_year.items():
    #    popular_car_year[item["car"]["car_year"]] += item["total_sales"]
    #else:
    #    popular_car_year[item["car"]["car_year"]] = item["total_sales"]
    #print(popular_car_year)
    #print(popular_car_year)
    temp = max(car_year_sales.items(), key=operator.itemgetter(1))
    most_sale_year, most_sale_value = temp

  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
      "The {} had the most sales: {}".format(
      format_car(max_sale["car"]),max_sale["total_sales"]),
      "The most popular year was {} with {} sales.".format(
      most_sale_year,most_sale_value),

  ]

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("E:/testtxt/car_sales.json")
  summary = process_data(data)
  print(summary)
  # TODO: turn this into a PDF report


  # TODO: send the PDF report as an email attachment


if __name__ == "__main__":
  main(sys.argv)
